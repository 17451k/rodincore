<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eventb.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eventb.ui" id="contentProvider" name="contentProvider"/>
      </appInfo>
      <documentation>
         &lt;p&gt;This extension point allows plug-in writers to register new types of files to be displayed inside the Rodin Project explorer&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="provider" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="provider">
      <complexType>
         <attribute name="rodinElementId" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eventb.ui.projectexplorer.AbstractRodinContentProvider:org.eclipse.jface.viewers.ITreeContentProvider"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         0.8.2
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of a project explorer extension definition. This makes the static checked machine files inside a project visible using a customized contentprovider
&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.eventb.ui.contentProvider&quot;&gt;
 &lt;provider
   class=&quot;MyProvider&quot;
   name=&quot;MyProvider&quot;
   rodinElementId=&quot;org.eventb.core.scMachineFile&quot;&gt;
 &lt;/provider&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
The value of the &lt;samp&gt;class&lt;/samp&gt; attribute of &lt;samp&gt;provider&lt;/samp&gt; element must be a fully qualified name of the class that implements &lt;samp&gt;org.eclipse.jface.viewers.ITreeContentProvider&lt;/samp&gt;. We recommend to extend &lt;samp&gt;org.eventb.ui.projectexplorer.AbstractRodinContentProvider&lt;/samp&gt; as it hides the methods from ITreeContentProvider that are not used within the explorer. The following example makes the Variables inside the static checked models visible:

&lt;br&gt;
&lt;pre&gt;
public class MyProvider extends AbstractRodinContentProvider {

 @Override
 public Object[] getChildren(final Object parentElement) {
  if (!(parentElement instanceof ISCMachineFile)) {
   return new Object[] {};
  }
  ISCMachineFile mch = (ISCMachineFile) parentElement;

  ArrayList&lt;TreeNode&lt;?&gt;&gt; list = new ArrayList&lt;TreeNode&lt;?&gt;&gt;();
  list.add(new TreeNode&lt;ISCVariable&gt;(&quot;Variables&quot;, mch,
    ISCVariable.ELEMENT_TYPE));

  return list.toArray();

 }

}
&lt;/pre&gt;

More information to follow ...

&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005-2008 ETH Zurich, Heinrich Heine Universitaet Duesseldorf and others.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
&lt;br&gt;
Contributors: HHU-Duesseldorf
      </documentation>
   </annotation>

</schema>
