This package contains a plugin into Eclipse that create a view
(namely "Event-B Keyboard") under RODIN category.

Version 2.5.0

Change Log:
- Version 1.0.0: Basic Keyboard using a KeyListener.

- Version 2.0.0: Change to using a ModifyListener instead of a
  KeyListener.

- Version 2.1.0: Add Help Contents.

- Version 2.2.0: Add a Preferences Page.

- Version 2.2.1: Update Help Contents for Preferences Page and Font.

- Version 2.3.0: Using General/Appearance/Colors and Fonts Preference Page.

- Version 2.3.1: Update Help Contents.

- Version 2.4.0: Create an extension point for other to plug their own translations.

- Version 2.4.1: Documenting the extension point.

- Version 2.5.0: Exporting components for using in other projects.

- Version 2.5.1: Fixing a bug for "or".

- Version 2.5.2: Changing "|" to "\u2223".

- Version 2.5.3: Modifying INSTALL document in order to deliver as a jar file.

- Version 2.5.4: Separated the tests from the plug-in.

--------

Once installed (see INSTALL), you can run Eclipse and choose to
open "Event-B Keyboard" View:
- Go to Window/Show View/Other
- Choose the view from the RODIN category

The view contains a Text area which takes ASCII input and translates
into mathematical language of Event-B. This is done by having a
ModifyListener to the Text area (see class EventBTextModifyListener).

The translation is done by looking at 'neighbouring area' of the
current point, and try to translate any 'combo' (set of characters -
see below). There are two kinds of combo: text and mathematical.
Text combo requires to have white-space around while mathematical
combo does not.

Below are the special combos (set of ASCII characters) and their
translations:

ASCII       Translation          Comments
------------------------------------------------------------------
NAT             ?              The set of natural numbers
NAT1            ?₁             The set of positive natural numbers
POW             ?              Power set
POW1            ?₁             Set of all non-empty subsets
INT             ?              The set of integer numbers

(               (              Left parenthesis
)               )              Right parenthesis
<=>            ⇔              Logical equivalence
=>             ⇒              Logical implication
&               ∧              Logical and
or              ?                             Logical or
not             ¬              Not sign
true            ?              true predicate
false           ⊥              false predicate
!               ∀              For all
#               ∃              There exists
,               ,              Comma
.               ·              Middle dot

=               =              Equal to
/=              ≠              Not equal to
<               <              Less than
<=              ≤              Less than or equal to
>               >              Greater than
>=              ≥              Greater than or equal to
:               ∈              Element of
/:              ?              Not an element of
<<:             ⊂              (Proper) Subset of
/<<:            ?              Not a (proper) subset of
<:              ⊆              Subset of or equal to
/<:             ?              Neither a subset of nor equal to

<->             ↔             Relation
<<->            ?             Total relation
<->>            ?             Surjective relation
<<->>           ?             Total surjective relation
+->             ?             Partial function
-->             →             Total function
>+>             ?             Partial injection
>->             ?             Total injection
+>>             ?             Partial surjection
->>             ?             Total surjection
>->>            ?             Bijection

{                {             Left curly bracket                             
}                }             Right curly bracket
|->              ?             Maplet 
{}               ?             Empty set
/\               ∩             Intersection
\/               ∪             Union
\                ?             Set minus
**               ×             Cartesian product

[                [             Left square bracket                             
]                ]             Right square bracket                             
<+               ?             Relation overriding
circ             ?             Backward composition
;                ;             Forward composition
><               ?             Direct product
||               ∥             Parallel product
~                ∼                         Tilde operator
<|               ◁             Domain restriction
<<|              ?             Domain substraction
|>               ▷             Range restriction
|>>              ?             Range substraction
                             
%                λ             Lambda 
INTER            ?             N-ary intersection    
UNION            ?             N-ary union    
|                ∣             	Such that

..               ‥                    Upto operation                        
+                +          Plus sign
-                −          Minus sign    
*                ?             Asterisk operator    
/                ÷             Division sign    
^                ^             Exponentiation sign

:=               ?             Becomes equal
::               :∈            Becomes an element of
:|               :∣            Becomes such that


--------------------------------------------------------------------------
Comments are very welcome to Thai Son Hoang (htson at inf dot ethz dot ch).
Please write your comments into a file using the following form 
---
+ Input (in ASCII, please specify clearly, including if you move the cursor
during typing):

+ Expected results: (in Unicode character)
---
Thank you very much for trying.
