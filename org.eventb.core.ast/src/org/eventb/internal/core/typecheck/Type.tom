/* Declaration of the Abstract Syntax Trees of types for TOM */

%typeterm Type {
	implement { Type }
	equals(t1,t2) { t1.equals(t2) }
}

%op Type PowSet (child : Type) {
	is_fsym(t) { t instanceof PowerSetType }
	get_slot(child,t) { ((PowerSetType) t).getBaseType() }
}

%op Type CProd (left: Type, right: Type) {
	is_fsym(t) { t instanceof ProductType }
	get_slot(left,t) { ((ProductType) t).getLeft() }
	get_slot(right,t) { ((ProductType) t).getRight() }
}

%op Type Set (name: String) {
	is_fsym(t) { t instanceof GivenType }
	get_slot(name,t) { ((GivenType) t).getName() }
}

%op Type Int {
	is_fsym(t) { t instanceof IntegerType }
}

%op Type Bool {
	is_fsym(t) { t instanceof BooleanType }
}

%op Type TypeVar {
	is_fsym(t) { t instanceof TypeVariable }
} 
