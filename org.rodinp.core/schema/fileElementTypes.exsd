<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.rodinp.core">
<annotation>
      <appInfo>
         <meta.schema plugin="org.rodinp.core" id="fileElementTypes" name="File Element Types"/>
      </appInfo>
      <documentation>
         &lt;p&gt;The Rodin platform contains an extensible database.  In particular, new kind of file elements can be added to the database.
&lt;/p&gt;&lt;p&gt;
This extension point allows plugins writers to register new types of Rodin file elements.
&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="fileElementType" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="fileElementType">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the identifier for this file element type (simple id token, unique
for element types within the extension namespace). The token cannot contain dot
(.) or whitespace.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the human-readable name of this file element type
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the fully-qualified name of a subclass of &lt;code&gt;org.rodinp.core.RodinFile&lt;/code&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.rodinp.core.RodinFile"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="content-type-id" type="string" use="required">
            <annotation>
               <documentation>
                  The full id of the content type for these files.  Must be a subtype of the &lt;code&gt;org.rodinp.core.rodin&lt;/code&gt; content type.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The specified class must subclass &lt;code&gt;org.rodinp.core.RodinFile&lt;/code&gt; and provide a constructor with the following signature:
&lt;pre&gt;
    public ClassName(org.eclipse.core.resources.IFile file, org.rodinp.core.IRodinElement parent)
&lt;/pre&gt;

Moreover, the first instruction of that constructor must be:
&lt;pre&gt;
    super(file, parent);
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005 ETH Zurich.&lt;br&gt;
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
