###############################################################################
# Copyright (c) 2006 ETH Zurich.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
###############################################################################

pluginName = Event-B Sequent Prover Plug-in
pluginProvider = ETH Zurich

point.reasoners = Reasoners
point.tactics = Reasoners

# Reasoners
allDName=Universal instantiation
allmpDName=Universal instantiation & mp
allIName=Universal introduction
conjName=Conjunction elimination / introduction
cutName=Cut rule
contrName=Contradiction
disjEName=Disjunction elimination
doCaseName=Case distinction on a predicate
eqName=Apply equality from left to right
exEName=Existential elimination (deprecated)
exIName=Existential introduction
falseHypName=False hypothesis
hypName=Hyp rule
impEName=Implication Elimination
impIName=Implication Introdiction
mngHypName=Manage Hypotheses
reviewName=Manual review
trueGoalName=True goal
autoImpEname=Automatic Implication Elimination
exFName=Existential forward inference
conjFName=Conjunction forward inference
isFunGoalName=Is functional goal

# Simple rewriters
removeNegationName = Remove Negation
disjToImplName = Transform a disjunction to implication
trivialName = Simplify trivial predicates
typePredName = Simplify type predicates

autoRewritesName = Automatic rewrites
doubleImplHypRewritesName = Double implication in hyp rewrites
disjToImplRewritesName = Disjunction to implication rewrites in hypothesis 
negEnumName = Negation with enumerated set
funOvrName = Function Overriding
heName= Apply equality from right to left
mtName= Modus Tollens
rnName= Remove Negation
rmName= Remove Membership
riName= Remove Inclusion
hypOrName = Disjunctive goal with hypothesis
impAndRewritesName = Implication with conjunctive right predicate
impOrRewritesName = Implication with disjunctive left predicate
typeRewritesName = Type Rewrites
relImgUnionRightRewritesName = Relational image with union right rewrites

# Tactics
normTacName = Normalise
autoRewriteTacName = Automatic Rewrites
autoImpETacName = Automatic Implication Elimination
autoFalsifyHypTacName = Automatic Falsify Hypothesis
autoEqETacName = Automatic Equality Application
autoExFTacName = Automatic Existential Elimination
autoNegEnumTacName = Automatic Negation with Enumerated Set
autoHypOrTacName = Automatic Hypothesis with Disjunctive Goal
typeRewriteTacName = Type Rewrites
isFunGoalTacName = Is Functional Goal
