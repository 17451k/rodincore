<project name="org.eventb.core.ast" default="generate" basedir=".">
	<description>
        Generates derived files in the Event-B AST library.
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<eclipse.convertPath fileSystemPath="${src}" property="srcPath"/>

	<property name="test" location="test" />
	<property name="tools" location="tools" />
	<property name="javadoc" location="javadoc" />
	<property name="coco-home" location="${tools}/Coco-R" />
	<property name="jflex-home" location="${tools}/jflex" />
	<property name="tom-home" location="${tools}/jtom-2.1" />
	
	<property name="lexerSrcDir" location="${src}/org/eventb/internal/core/parser" />
	<eclipse.convertPath fileSystemPath="${lexerSrcDir}" property="lexerSrcPath"/>

	<property name="parserPkg" value="org.eventb.internal.core.parser" />
	<property name="parserSrcDir" location="${src}/org/eventb/internal/core/parser" />
	<eclipse.convertPath fileSystemPath="${parserSrcDir}" property="parserSrcPath"/>

	<property name="unifierSrcDir" location="${src}/org/eventb/internal/core/typecheck" />
	<eclipse.convertPath fileSystemPath="${unifierSrcDir}" property="unifierSrcPath"/>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
	</target>

	<target name="generate" depends="lex,parser,tom" description="Generate all Java files">
		<eclipse.incrementalBuild/>
	</target>

	<target name="lex" depends="init" description="generate the lexer">
		<taskdef classname="JFlex.anttask.JFlexTask" classpath="${jflex-home}/lib/JFlex.jar" name="jflex" />
		<jflex destdir="${src}"
			file="${lexerSrcDir}/bmath.lex"
			skeleton="${lexerSrcDir}/jflex.skeleton"
		/>
		<eclipse.refreshLocal resource="${lexerSrcPath}" depth="one"/>
	</target>

	<target name="parser-test" depends="init"
			description="Test if generated parser is up to date">
		<uptodate property="parser.notRequired" 
				targetfile="${parserSrcDir}/Parser.java" >
		    <srcfiles file= "${parserSrcDir}/bmath.atg" />
		    <srcfiles file= "${parserSrcDir}/Parser.frame" />
		</uptodate>
		<!-- echoproperties prefix="parser" /-->
	</target>

	<target name="parser" 
			depends="init,parser-test"
			description="generate the parser"
			unless="parser.notRequired">
		<java 
			jar="${coco-home}/Coco.jar"
			fork="true"
			dir="${parserSrcDir}"	>
			<arg line="-package ${parserPkg}" />
			<arg file="${parserSrcDir}/bmath.atg" />
		</java>
		<eclipse.refreshLocal resource="${parserSrcPath}" depth="one"/>
	</target>

	<target name="tom-test" depends="init"
			description="Test if generated tom files are up to date">
		<uptodate property="tom.notRequired" 
				targetfile="${unifierSrcDir}/TypeUnifier.java" >
		    <srcfiles file= "${unifierSrcDir}/TypeUnifier.t" />
		    <srcfiles file= "${unifierSrcDir}/Type.tom" />
		</uptodate>
		<!-- echoproperties prefix="tom" /-->
	</target>

	<target name="tom" depends="init,tom-test"
		description="launch tom"
		unless="tom.notRequired" >
		<java classname="jtom.Tom" fork="true">
			<classpath>
				<fileset dir="${tom-home}/lib">
		        	<include name="*.jar"/>
				</fileset>
			</classpath>
			<sysproperty key="tom.home" value="${tom-home}" />
			<arg value="-I" />
			<arg value="${tom-home}/share/jtom" />
			<arg value="-X" />
			<arg value="${tom-home}/Tom.xml" />
			<arg value="-o" />
			<arg value="${unifierSrcDir}/TypeUnifier.java" />
			<arg value="-p" />
			<arg value="${unifierSrcDir}/TypeUnifier.t" />
		</java>
		<eclipse.refreshLocal resource="${unifierSrcPath}" depth="one"/>
	</target>

	<target 
		name="coco-regen" 
		depends="coco-compile"
		description="Regenerate the Coco/R source files from its grammar (bootstrap it)">
		<java jar="${coco-home}/Coco.jar" fork="true">
			<arg line="-package Coco" />
			<arg file="${coco-home}/Coco.atg" />
		</java>
		<move file="${coco-home}/Parser.java" todir="${coco-home}/Coco" />
		<move file="${coco-home}/Scanner.java" todir="${coco-home}/Coco" />
	</target>

	<target name="coco-compile" depends="init" description="Compile the Coco/R Parser Generator">
		<javac srcdir="${coco-home}" />
		<jar 
			destfile="${coco-home}/Coco.jar" 
			basedir="${coco-home}"
			includes="Coco/*.class"
			manifest="${coco-home}/Coco.manifest"
		/>
	</target>

	<target name="jflex-compile" depends="init" description="Compile the JFlex Scanner Generator">
		<ant antfile="${jflex-home}/src/build.xml"
			dir="${jflex-home}/src"
			target="jar"
			inheritAll="false"
		/>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${javadoc}" />
		<delete file="${lexerSrcDir}/Lexer.java" />
		<delete file="${parserSrcDir}/Parser.java" />
		<delete file="${parserSrcDir}/Parser.java.old" />
		<delete file="${unifierSrcDir}/TypeUnifier.java" />
		<eclipse.refreshLocal resource="${srcPath}" depth="infinite"/>
	</target>
	
	<target name="javadoc" description="Generates the javadoc of the published API">
		<javadoc 
			access="public" 
			author="true" 
			classpath="." 
			destdir="javadoc" 
			doctitle="The event-B AST library" 
			nodeprecated="false" 
			nodeprecatedlist="false" 
			noindex="false" 
			nonavbar="false" 
			notree="false" 
			packagenames="org.eventb.core.ast" 
			source="1.5" 
			sourcepath="src" 
			splitindex="true" 
			use="true" 
			version="true"/>
	</target>

</project>