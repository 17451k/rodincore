/*
 *  All sequents of this file have been extracted from the book:
 *     Mathematical Logic: Applications and Theory
 *     by Jean E. Rubin
 *     Saunders College Publishing, 1990
 *     ISBN 0-03-012808-0
 */

"INVALID, Rubin Rules Ia, p230":
!x x = x
|- X & ~X;

"INVALID, Rubin Rules Ic, p230":
!x !y (x = y -> y = x)
|- X & ~X;

"INVALID, Rubin Rules Id, p230":
!x !y !z (x = y & y = z -> x = z)
|- X & ~X;

"INVALID, Rubin Example 11.1, p231":
!x (Px & Qx -> x = a | x = b),
~Ra,
~ #x (Qx & Rx & ~Px),
!x (Qx & Rx -> x = b)
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.5, p232":
#x Ax & !y !z (Ay & Az -> y = z) <-> #x (Ax & !y (Ay -> x = y))
|- X & ~X;

"INVALID, Rubin Example 11.9(a), p239":
Cp,
Nj,
!x (Nx -> ~Cx),
j /= p
|- X & ~X;

"INVALID, Rubin Example 11.9(b), p240":
Ta,
!x !y (Tx & Ry & x /= a -> Faxy),
#x #y (Tx & Ry & Wxy),
!x !y !z (Rz & Fxyz -> ~Wyz),
#x (Rx & Wax)
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.E(2), p244":
!x (Px | x = b),
~!x x = b,
#x Px
|- X & ~X;

"INVALID, Rubin Example 11.E(3), p244":
#y !x (x = y -> Qx),
#x Qx
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.E(5), p244":
!x (Rax -> a = x | a = b),
#x Rax,
Sa & ~Sb,
Raa
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.E(6), p244":
#y !x (Fx <-> x = y),
!x (Fx -> Gx) <-> #x (Fx & Gx)
|- X & ~X;

/* fails because of missing singleton set rule */
"INVALID, Rubin Example 11.E(7), p244":
!x !y (Rxy -> x = y),
#x Px,
#x ~Px,
#x #y ~Rxy
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.E(8), p244":
#x (Px & !y (Py -> x = y)),
#x !y (Py <-> x = y)
|- X & ~X;

"INVALID, Rubin Example 11.E(10), p244":
!x (Ax -> #y Bxy),
#x (Ax & ~Bxa),
#x #y (Bxy & y /= a)
|- X & ~X;

"INVALID, Rubin Example 11.E(11), p244":
!x !y (Ax & By -> x = y),
#x (Ax & Cx),
#x (Bx & Dx),
#x (Cx & Dx)
|- X & ~X;

/* fails because of singleton sets -> add an instantiation rule for !x.#y.x/=y */
"INVALID, Rubin Example 11.E(17), p245":
#x (!y Fxy | !y Fyx),
!x (~Fxx | Gxa),
!x (x /= a -> ~Gxa),
!x !y (Gxa -> Gya),
#y !x x = y
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.E(24), p245":
!x !y (Rxy -> ~Ryx),
!x !y (Rxy -> x /= y),
!x !y !z (Rxy & Ryz -> Rxz),
!x !z (x /= z -> #y Bxyz),
!x !y !z (Bxyz -> (Rxy & Ryz) | (Rzy & Ryx)),
!x !z (Rxz -> #y (Rxy & Ryz))
|- X & ~X;

/*  */
"INVALID, Rubin Example 11.F(1), p245":
!x (Px <-> #y (Px & Py))
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.F(3), p245":
#y !x (Fx <-> x = y) & #x (Fx & Gx) -> !x (Fx -> Gx)
|- X & ~X;

/* fails because of missing equality between variables */
"INVALID, Rubin Example 11.F(7), p245":
#x (Px & !y (Py <-> x = y)) <-> #x !y (Py <-> x = y)
|- X & ~X;

"INVALID, Rubin Example 11.F(8), p245":
!x (Ax -> (Bx <-> #y (x = y & By)))
|- X & ~X;


"INVALID, dummy theorem (should be last)":
|- P

