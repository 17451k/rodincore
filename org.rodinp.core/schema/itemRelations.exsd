<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.rodinp.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.rodinp.core" id="itemRelations" name="%itemRelationsName"/>
      </appInfo>
      <documentation>
         This extension point is used to define the relationships between elements, and between attributes and elements.
&lt;p&gt;
Since Rodin 3.0, the Rodin database has been more restrictive than in earlier versions. Initially, one could freely mix elements and attributes. Since Rodin 3.0, one has to declare the allowed relationships between Rodin items that live in files.  Then, the type of the child elements and attributes of an internal element are restricted to only the relationships declared through this extension point.  When loading a Rodin file, any item that does not fulfill these restrictions is simply ignored by the database and not visible anymore through the API. It is not possible to create a child element or attribute that does not correspond to a declared relationship either.
Note that there exist a particular relationship type called &lt;em&gt;ubiquitous&lt;/em&gt;, which allows to define child element types or carried attributes types in relationship with any other declared internal element.
&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <choice minOccurs="1" maxOccurs="unbounded">
               <element ref="relationship"/>
               <element ref="ubiquitous"/>
            </choice>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  A fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  An optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  An optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="relationship">
      <annotation>
         <documentation>
            Defines the type of allowed child elements and attributes of an internal element.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <choice minOccurs="1" maxOccurs="unbounded">
               <element ref="childType"/>
               <element ref="attributeType"/>
            </choice>
         </sequence>
         <attribute name="parentTypeId" type="string" use="required">
            <annotation>
               <documentation>
                  Id of the internal element type of parent elements (see extension point &lt;code&gt;org.rodinp.core.internalElementTypes&lt;/code&gt;).
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="ubiquitous">
      <annotation>
         <documentation>
            Defines the a type of child elements (resp. attributes) which can be parented (resp. carried) by any internal element.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <choice minOccurs="1" maxOccurs="unbounded">
               <element ref="childType"/>
               <element ref="attributeType"/>
            </choice>
         </sequence>
      </complexType>
   </element>

   <element name="childType">
      <annotation>
         <documentation>
            Defines the allowed type of a child element.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Id of the allowed element type of children (see extension point &lt;code&gt;org.rodinp.core.internalElementTypes&lt;/code&gt;)
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="attributeType">
      <annotation>
         <documentation>
            Defines the allowed type of an attribute.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="typeId" type="string" use="required">
            <annotation>
               <documentation>
                  Id of the Rodin attribute type which is allowed (see extension point &lt;code&gt;org.rodinp.core.attributeTypes&lt;/code&gt;)
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         See the &lt;code&gt;org.eventb.core&lt;/code&gt; plug-in.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         None.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         See the &lt;code&gt;org.eventb.core&lt;/code&gt; plug-in.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2012, 2014 Systerel and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;

Contributors:
    Systerel - initial API and implementation
      </documentation>
   </annotation>

</schema>
