<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.rodinp.core">
<annotation>
      <appInfo>
         <meta.schema plugin="org.rodinp.core" id="autoTools" name="%autoToolsName"/>
      </appInfo>
      <documentation>
         The Rodin platform supports the notion of automatic tools.  These tools are run automatically 
when changes to the Rodin database are committed.  To implement the reactive model of Rodin,
automatic tools are run only when one of their input files has changed.
&lt;p&gt;
As such, for each automatic tool, plugin developers must provide two kinds of contributions:
&lt;ul&gt;
  &lt;li&gt;some dependency extractors,&lt;/li&gt;
  &lt;li&gt;the tool itself.&lt;/li&gt;
&lt;/ul&gt;
TODO finish describing extractors and tools.
&lt;/p&gt;&lt;p&gt;
The &lt;code&gt;autoTools&lt;/code&gt; extension-point allows tool writers to register their tool
implementation under a symbolic name that is then used by the Rodin platform to find and run
the tool.  The symbolic name is the id of the tool extension. When defining a tool extension,
users are encouraged to include a human-readable value for the &quot;name&quot; attribute which identifies
their tool and potentially may be presented to users.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="tool" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="tool">
      <complexType>
         <sequence>
            <element ref="extractor" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the identifier for this tool (simple id token, unique
for element types within the extension namespace). The token cannot contain dot
(.) or whitespace.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  the human-readable name of this tool
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  fully qualified name of the class that contains this tool (an implementation of interface
&lt;samp&gt;org.rodinp.core.builder.IAutomaticTool&lt;/samp&gt;)
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="extractor">
      <complexType>
         <sequence>
            <element ref="inputType" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the identifier for this extractor (simple id token, unique
for element types within the extension namespace). The token cannot contain dot
(.) or whitespace.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  the human-readable name of this extractor
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  fully qualified name of the class that contains this extractor (an implementation of interface
&lt;samp&gt;org.rodinp.core.builder.IExtractor&lt;/samp&gt;)
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="inputType">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  identifier of a type of file elements this extractor can analyze
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         This extension point is provided by the Rodin platform since its inception.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [TODO Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The class provided for extractors must implement the &lt;samp&gt;org.rodinp.core.builder.IExtractor&lt;/samp&gt;
interface, while the class provided for tools themselves must implement
&lt;samp&gt;org.rodinp.core.builder.IAutomaticTool&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The Rodin platform itself does not provide any automatic tools. These are provided
by additional features such as the Event-B modelling environment
(see plugin &lt;samp&gt;org.eventb.core&lt;/samp&gt;).
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2006 ETH Zurich.&lt;br&gt;
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
