<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.rodinp.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.rodinp.core" id="refinements" name="Refinements"/>
      </appInfo>
      <documentation>
         In the context of this plug-in, the notion of refinement is to be understood as an operation that makes a new component (the target) from an existing one (the source), without any constraint about the results.
&lt;p&gt;
Three kinds of contributions are available:
&lt;ul&gt;
&lt;li&gt;Refinement, that describes the refinement for a given root element type&lt;/li&gt;
&lt;li&gt;Participant, that actually performs a part of the refinement&lt;/li&gt;
&lt;li&gt;Order, to use when several participants are involved, to control in which order they are called&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <choice minOccurs="1" maxOccurs="unbounded">
               <element ref="Refinement"/>
               <element ref="Participant"/>
               <element ref="Order"/>
            </choice>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="Refinement">
      <annotation>
         <documentation>
            Defines a refinement.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The identifier for this refinement (simple id token, unique for refinements within the extension namespace). The token cannot contain dot (.) or whitespace.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="root-element-type" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified element type identifier this refinement applies to.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="Participant">
      <annotation>
         <documentation>
            Defines a participant in a refinement. The sam
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The identifier for this participant (simple id token, unique for participants within the extension namespace). The token cannot contain dot (.) or whitespace.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="refinement-id" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified identifier of the refinement this participant takes part in.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of a class that implements &lt;code&gt;IRefinementParticipant&lt;/code&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.rodinp.core.IRefinementParticipant"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="Order">
      <complexType>
         <attribute name="first-participant-id" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified identifier of the participant called before the other one.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="second-participant-id" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified identifier of the participant called after the other one.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         org.rodinp.core 1.4;
Rodin 2.2
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         Extensions of this point can be found in org.eventb.core plug-in.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         Refinement can be performed by calling &lt;samp&gt;RodinCore.getRefinementManager()&lt;/samp&gt;. See &lt;samp&gt;org.rodinp.core.IRefinementManager&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         Extensions of this point can be found in org.eventb.core plug-in.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2011 Systerel and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
